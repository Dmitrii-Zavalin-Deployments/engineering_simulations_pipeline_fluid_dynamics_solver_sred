name: Fluid Dynamics Calculations Pipeline

on:
  push:
    branches:
      - "**"
  workflow_dispatch:

jobs:
  fluid_dynamics_simulation:
    runs-on: ubuntu-latest

    env:
      PYTHONPATH: ${{ github.workspace }}/src
      ORIGINAL_INPUT_FILE: ${{ github.workspace }}/data/testing-input-output/fluid_simulation_input.json
      OUTPUT_RESULTS_BASE_DIR: ${{ github.workspace }}/data/testing-output-run
      TEMP_SOLVER_INPUT_FILE: ${{ github.workspace }}/temp/solver_input.json

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup Python & Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt pytest numpy jsonschema jq
        echo "‚úÖ Python and dependencies installed."

    - name: Validate Thresholds (Schema + Fallbacks)
      run: |
        echo "üîç Running threshold schema validation and fallback audit..."
        python validate_thresholds.py
        cat data/testing-input-output/threshold_report.json
        echo "‚úî Thresholds Validated."

    - name: Clean Previous Input & Download Files
      env:
        APP_KEY: ${{ secrets.APP_KEY }}
        APP_SECRET: ${{ secrets.APP_SECRET }}
        REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
      run: |
        rm -f "$ORIGINAL_INPUT_FILE" && echo "üóëÔ∏è Cleaned previous input (if existed)." || echo "‚ÑπÔ∏è No previous input to clean."
        chmod +x src/download_from_dropbox.sh
        src/download_from_dropbox.sh
        [ -f "$ORIGINAL_INPUT_FILE" ] && echo "‚úÖ Original input file found." || { echo "‚ùå Error: Original input file missing!"; exit 1; }

    - name: Run Pre-processor (Generate cell_indices and structured input)
      run: |
        mkdir -p "$(dirname "$TEMP_SOLVER_INPUT_FILE")"
        python "${GITHUB_WORKSPACE}/src/pre_process_input.py" "$ORIGINAL_INPUT_FILE" "$TEMP_SOLVER_INPUT_FILE"

    - name: Run Main Solver
      run: |
        rm -rf "$OUTPUT_RESULTS_BASE_DIR"
        mkdir -p "$OUTPUT_RESULTS_BASE_DIR"
        python "${GITHUB_WORKSPACE}/src/main_solver.py" "$TEMP_SOLVER_INPUT_FILE" "$OUTPUT_RESULTS_BASE_DIR"
        echo "‚úÖ Main solver executed."

    - name: Run Tests
      run: |
        ACTUAL_OUTPUT_DIR="$OUTPUT_RESULTS_BASE_DIR/navier_stokes_output"
        echo "üîç FULL_OUTPUT_DIR=$ACTUAL_OUTPUT_DIR"
        echo "üîç RESTARTED_OUTPUT_DIR=$ACTUAL_OUTPUT_DIR"
        pytest -s tests/ --verbose -ra

    - name: Upload Results to Dropbox
      env:
        APP_KEY: ${{ secrets.APP_KEY }}
        APP_SECRET: ${{ secrets.APP_SECRET }}
        REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
        UPLOAD_DIR: ${{ env.OUTPUT_RESULTS_BASE_DIR }}/navier_stokes_output
      run: |
        chmod +x src/upload_to_dropbox.sh
        echo "üîç Uploading contents of: $UPLOAD_DIR"
        ls -R "$UPLOAD_DIR"
        src/upload_to_dropbox.sh "$UPLOAD_DIR"



