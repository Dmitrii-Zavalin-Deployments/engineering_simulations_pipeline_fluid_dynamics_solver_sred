name: Fluid Dynamics Calculations Pipeline

on:
  push:
    branches:
      - "**" # Triggers on any branch
  workflow_dispatch:

jobs:
  fluid_dynamics_simulation:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.13" # Ensure consistent Python version

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest numpy # Explicitly install dependencies

    - name: List installed packages (Debugging)
      run: pip list
      
    - name: Delete Previous Fluid Simulation Input JSON
      run: |
        if [ -f $GITHUB_WORKSPACE/data/testing-input-output/fluid_simulation_input.json ]; then
          rm $GITHUB_WORKSPACE/data/testing-input-output/fluid_simulation_input.json
          echo "üóëÔ∏è Deleted previous fluid_simulation_input.json file."
        else
          echo "‚ÑπÔ∏è No previous fluid_simulation_input.json found‚Äîproceeding with new generation."
        fi
    
    - name: Make `download_from_dropbox.sh` Executable
      run: chmod +x src/download_from_dropbox.sh

    - name: Download Simulation Files from Dropbox
      env:
        APP_KEY: ${{ secrets.APP_KEY }}
        APP_SECRET: ${{ secrets.APP_SECRET }}
        REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
      run: src/download_from_dropbox.sh

    # Ensure input file `fluid_simulation_input.json` exists before execution
    - name: Verify Input File Exists
      run: |
        INPUT_FILE="${GITHUB_WORKSPACE}/data/testing-input-output/fluid_simulation_input.json"
        if [ ! -f "$INPUT_FILE" ]; then
          echo "‚ùå Error: Input file fluid_simulation_input.json is missing at $INPUT_FILE!"
          exit 1
        fi
        echo "‚úÖ Input file fluid_simulation_input.json found at $INPUT_FILE."

    # Debugging: Print full directory tree before running Navier-Stokes simulation
    - name: Debugging - List All Files in Repository
      run: ls -R "${GITHUB_WORKSPACE}"
    
    # Run the Simplified Navier-Stokes Simulation with full path reference
    - name: Run Simplified Navier-Stokes Solver
      run: |
        python "${GITHUB_WORKSPACE}/src/simplified_navier_stokes.py" "${GITHUB_WORKSPACE}/data/testing-input-output/fluid_simulation_input.json"
        echo "‚úÖ Simplified Navier-Stokes simulation executed successfully."

    # Ensure output file exists after execution
    - name: Verify Output File Exists
      run: |
        OUTPUT_FILE="${GITHUB_WORKSPACE}/data/testing-input-output/navier_stokes_results.json"
        if [ ! -f "$OUTPUT_FILE" ]; then
          echo "‚ùå Error: Simulation output file not found at $OUTPUT_FILE!"
          exit 1
        fi
        echo "‚úÖ Output file navier_stokes_results.json found at $OUTPUT_FILE."

    - name: Debugging - Show Output File Contents
      run: |
        echo "üîç Output File Content Preview:"
        cat "${GITHUB_WORKSPACE}/data/testing-input-output/navier_stokes_results.json"

    # Validate JSON Format Before Committing
    - name: Verify JSON Format Before Commit
      run: |
        OUTPUT_FILE="${GITHUB_WORKSPACE}/data/testing-input-output/navier_stokes_results.json"
        if jq empty "$OUTPUT_FILE"; then
          echo "‚úÖ JSON output is valid."
        else
          echo "‚ùå Error: JSON output is malformed!"
          exit 1
        fi

    # --- Commit and Push Updated Simulation Results (If Tests Pass) ---
    # - name: Commit and Push Simulation Results JSON
    #  env:
    #    GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
    #    GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
    #  run: |
    #    git config --global user.name "${GIT_USER_NAME}"
    #    git config --global user.email "${GIT_USER_EMAIL}"

    #    cd "$GITHUB_WORKSPACE"
    #    RESULTS_FILE="data/testing-input-output/navier_stokes_results.json"

    #    if [ -s "$RESULTS_FILE" ]; then
    #      git add "$RESULTS_FILE"
    #      git status
          
    #      if git diff --cached --quiet; then
    #        echo "‚úÖ No changes to commit in $RESULTS_FILE!"
    #      else
    #        git commit -m "Auto-update: Added latest Navier-Stokes simulation result"
    #        git push origin HEAD
    #      fi
    #    else
    #      echo "‚ùå No valid simulation result file detected ($RESULTS_FILE is empty or missing), skipping commit."
    #    fi

    - name: Make `upload_to_dropbox.sh` Executable
      run: chmod +x src/upload_to_dropbox.sh

    - name: Debug Before Dropbox Upload
      run: |
        echo "üîç Checking directory structure before upload..."
        ls -R $GITHUB_WORKSPACE

    - name: Upload Fluid Simulation Input to Dropbox
      env:
        APP_KEY: ${{ secrets.APP_KEY }}
        APP_SECRET: ${{ secrets.APP_SECRET }}
        REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
      run: src/upload_to_dropbox.sh
